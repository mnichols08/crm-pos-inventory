name: Verify (dependabot)

on: [pull_request]

concurrency:
  group: verify-${{ github.head_ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 14.x

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    timeout-minutes: 20
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3.3.0

      - name: Setup Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        env:
          CYPRESS_INSTALL_BINARY: 0 # Skip install of Cypress (handled in its own job)
          HUSKY_SKIP_INSTALL: 1 # Skip install of Husky
        run: |
          npm ci --loglevel error
          npm --prefix functions ci --loglevel error

      - name: Set environment
        run: |
          # Get branch name from github ref (i.e. refs/heads/master -> master)
          gitBranch=${GITHUB_REF##*/}

          # Find the config associated to the firebase project in .firebaserc (falling back to default)
          gcloudProject=$(cat .firebaserc | jq -r --arg alias "$gitBranch" '.projects[$alias] // .projects.default')
          appName=crm-pos-inventory

          echo "Setting environment for branch: $gitBranch, project: $gcloudProject, and app: $appName..."

          # Set variables to environment to be used in later steps
          echo "GCLOUD_PROJECT=$gcloudProject" >> $GITHUB_ENV
          echo "NODE_CONFIG_ENV=$branch" >> $GITHUB_ENV
          echo "ENV=$branch" >> $GITHUB_ENV

      - name: Verify App
        run: |
          npm run lint # Check for lint in app code

      - name: Unit Test Functions
        run: |
          echo "Setting emulator settings to environment..."
          # Set variables to environment to be used in later steps
          echo "FIREBASE_AUTH_EMULATOR_HOST=$(cat firebase.json | jq .emulators.auth.port)" >> $GITHUB_ENV
          echo "FIREBASE_DATABASE_EMULATOR_HOST=$(cat firebase.json | jq .emulators.database.port)" >> $GITHUB_ENV
          echo "FIRESTORE_EMULATOR_HOST=localhost:$(cat firebase.json | jq .emulators.firestore.port)" >> $GITHUB_ENV

          # Run tests and generate coverage
          npm run functions:test:cov -- --project $GCLOUD_PROJECT # Run unit tests with coverage

      - name: Build Functions
        run: |
          npm run functions:build

      - name: Build App
        run: |
          npm run build
